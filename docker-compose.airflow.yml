version: "3.8"

x-airflow-env: &airflow-env
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__LOAD_EXAMPLES: "false"
  AIRFLOW__WEBSERVER__RBAC: "true"
  AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
  _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-docker==3.11.0"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 10

  airflow-init:
    image: apache/airflow:2.9.3
    user: "${AIRFLOW_UID:-50000}:0"
    entrypoint: /bin/bash
    environment:
      <<: *airflow-env
      AIRFLOW_UID: "${AIRFLOW_UID:-50000}"
      PATH: "/home/airflow/.local/bin:/usr/local/bin:/usr/bin:/bin"
    command:
      - -lc
      - |
        set -e
        # Only install if the var is non-empty
        if [ -n "${_PIP_ADDITIONAL_REQUIREMENTS}" ]; then
          pip install --no-cache-dir ${_PIP_ADDITIONAL_REQUIREMENTS}
        fi
        # Make sure logs/plugins exist and are writable
        mkdir -p /opt/airflow/logs /opt/airflow/plugins
        chmod -R 775 /opt/airflow/logs /opt/airflow/plugins
        airflow db init
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    depends_on:
      - postgres

  airflow-webserver:
    image: apache/airflow:2.9.3
    user: "${AIRFLOW_UID:-50000}:0"
    ports: ["5000:8080"]
    environment:
      <<: *airflow-env
      AIRFLOW_UID: "${AIRFLOW_UID:-50000}"
      PATH: "/home/airflow/.local/bin:/usr/local/bin:/usr/bin:/bin"
    command: webserver
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - airflow-init

  airflow-scheduler:
    image: apache/airflow:2.9.3
    user: "${AIRFLOW_UID:-50000}:0"
    environment:
      <<: *airflow-env
      AIRFLOW_UID: "${AIRFLOW_UID:-50000}"
      PATH: "/home/airflow/.local/bin:/usr/local/bin:/usr/bin:/bin"
      # ABSOLUTE host paths required for DockerOperator volume binds:
      PROJECT_HOST_DIR: "/home/savgeor/Documents/personal/profile/neura/data_engineer_python_v2/data_engineer_python-main"
      DATA_HOST_DIR: "/home/savgeor/Documents/personal/profile/neura/data_engineer_python_v2/data_engineer_python-main/robot_data"
    command: scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - airflow-init

  airflow-triggerer:
    image: apache/airflow:2.9.3
    user: "${AIRFLOW_UID:-50000}:0"
    environment:
      <<: *airflow-env
      AIRFLOW_UID: "${AIRFLOW_UID:-50000}"
      PATH: "/home/airflow/.local/bin:/usr/local/bin:/usr/bin:/bin"
    command: triggerer
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    depends_on:
      - postgres
      - airflow-init

volumes:
  airflow-db:
